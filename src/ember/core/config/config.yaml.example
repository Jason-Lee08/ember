# Ember Configuration Example
#
# This file demonstrates the structure and options for configuring Ember.
# Copy this file to 'config.yaml' in your project root and customize as needed.

# Registry configuration controls the model registry behavior
registry:
  # Whether to automatically discover models from provider APIs
  auto_discover: true
  
  # Provider configurations
  providers:
    # OpenAI provider
    openai:
      # Whether this provider is enabled
      enabled: true
      
      # API key (can use environment variable)
      api_key: "${OPENAI_API_KEY}"
      
      # Optional provider-specific settings
      base_url: "https://api.openai.com/v1"
      timeout: 30.0
      
      # Model configurations
      models:
        # Key is the model name (referenced as "openai:gpt-4o")
        gpt-4o:
          # Human-readable name
          name: "GPT-4o"
          
          # Cost per 1000 tokens
          cost_input: 5.0
          cost_output: 15.0
          
          # Optional model-specific settings
          context_length: 128000
          vision_enabled: true
        
        # Another model example
        gpt-3.5-turbo:
          name: "GPT-3.5 Turbo"
          cost_input: 0.5
          cost_output: 1.5
    
    # Anthropic provider
    anthropic:
      enabled: true
      api_key: "${ANTHROPIC_API_KEY}"
      models:
        claude-3-opus:
          name: "Claude 3 Opus"
          cost_input: 15.0
          cost_output: 75.0
          
        claude-3-sonnet:
          name: "Claude 3 Sonnet"
          cost_input: 3.0
          cost_output: 15.0

# Logging configuration
logging:
  # Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: "INFO"
  
  # Optional extended logging configuration
  file: "ember.log"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Additional custom sections can be added as needed
cache:
  enabled: true
  directory: ".cache"
  ttl_seconds: 3600