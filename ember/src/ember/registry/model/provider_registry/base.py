import abc
from typing import Any

from ..schemas.model_info import ModelInfo
from ..schemas.chat_schemas import ChatRequest, ChatResponse


class BaseProviderModel(abc.ABC):
    """Base class for all provider implementations.

    This abstract class defines the contract for creating an API client and
    processing chat requests. Subclasses must implement the methods to create
    their respective clients and to handle chat requests.
    """

    def __init__(self, model_info: ModelInfo) -> None:
        """Initialize the provider model with the given model information.

        Args:
            model_info (ModelInfo): Metadata and configuration details for the model.
        """
        self.model_info: ModelInfo = model_info
        self.client: Any = self.create_client()

    @abc.abstractmethod
    def create_client(self) -> Any:
        """Create and configure the API client.

        Subclasses must override this method to initialize and return their API client.

        Returns:
            Any: A configured API client instance.
        """
        raise NotImplementedError("Subclasses must implement create_client")

    @abc.abstractmethod
    def forward(self, request: ChatRequest) -> ChatResponse:
        """Process the chat request and return the corresponding response.

        Args:
            request (ChatRequest): The chat request containing the prompt and additional parameters.

        Returns:
            ChatResponse: The response generated by the provider.
        """
        raise NotImplementedError("Subclasses must implement forward")

    def __call__(self, prompt: str, **kwargs: Any) -> ChatResponse:
        """Allow the instance to be called as a function to process a prompt.

        This method constructs a ChatRequest using the prompt and keyword arguments,
        and then delegates the request processing to the forward() method.

        Args:
            prompt (str): The chat prompt to send.
            **kwargs (Any): Additional parameters to pass into the ChatRequest.

        Returns:
            ChatResponse: The response produced by processing the chat request.
        """
        chat_request: ChatRequest = ChatRequest(prompt=prompt, **kwargs)
        return self.forward(request=chat_request)
